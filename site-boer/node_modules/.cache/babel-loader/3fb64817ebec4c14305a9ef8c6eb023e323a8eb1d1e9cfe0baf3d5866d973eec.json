{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { auth } from '../firebase/connection'; // Importando auth do arquivo de configuração\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\n\n// Hook personalizado para autenticação\nexport const useAuthentication = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Função para criar um novo usuário\n  const createUser = async data => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Criando usuário com email e senha\n      const {\n        user\n      } = await createUserWithEmailAndPassword(auth, data.email, data.password);\n\n      // Atualizando o perfil com o nome de exibição\n      await updateProfile(user, {\n        displayName: data.displayName\n      });\n      setLoading(false);\n      return user;\n    } catch (error) {\n      console.error(error.message);\n      let systemErrorMessage;\n      if (error.code === \"auth/weak-password\") {\n        systemErrorMessage = \"A senha precisa ter pelo menos 6 caracteres.\";\n      } else if (error.code === \"auth/email-already-in-use\") {\n        systemErrorMessage = \"E-mail já cadastrado.\";\n      } else if (error.code === \"auth/invalid-email\") {\n        systemErrorMessage = \"E-mail inválido.\";\n      } else {\n        systemErrorMessage = \"Ocorreu um erro, por favor tente mais tarde.\";\n      }\n      setError(systemErrorMessage);\n      setLoading(false);\n    }\n  };\n  return {\n    auth,\n    createUser,\n    error,\n    loading\n  };\n};\n_s(useAuthentication, \"rEc7l+pXbieyWSk0M8PP+QokfWo=\");","map":{"version":3,"names":["useState","auth","createUserWithEmailAndPassword","updateProfile","useAuthentication","_s","error","setError","loading","setLoading","createUser","data","user","email","password","displayName","console","message","systemErrorMessage","code"],"sources":["C:/Users/Aluno/Downloads/Pizzaria-site/src/hooks/useAuthentication.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { auth } from '../firebase/connection'; // Importando auth do arquivo de configuração\r\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth';\r\n\r\n// Hook personalizado para autenticação\r\nexport const useAuthentication = () => {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Função para criar um novo usuário\r\n  const createUser = async (data) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Criando usuário com email e senha\r\n      const { user } = await createUserWithEmailAndPassword(\r\n        auth,\r\n        data.email,\r\n        data.password\r\n      );\r\n\r\n      // Atualizando o perfil com o nome de exibição\r\n      await updateProfile(user, {\r\n        displayName: data.displayName,\r\n      });\r\n\r\n      setLoading(false);\r\n      return user;\r\n    } catch (error) {\r\n      console.error(error.message);\r\n      \r\n      let systemErrorMessage;\r\n\r\n      if (error.code === \"auth/weak-password\") {\r\n        systemErrorMessage = \"A senha precisa ter pelo menos 6 caracteres.\";\r\n      } else if (error.code === \"auth/email-already-in-use\") {\r\n        systemErrorMessage = \"E-mail já cadastrado.\";\r\n      } else if (error.code === \"auth/invalid-email\") {\r\n        systemErrorMessage = \"E-mail inválido.\";\r\n      } else {\r\n        systemErrorMessage = \"Ocorreu um erro, por favor tente mais tarde.\";\r\n      }\r\n\r\n      setError(systemErrorMessage);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    auth,\r\n    createUser,\r\n    error,\r\n    loading,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,wBAAwB,CAAC,CAAC;AAC/C,SAASC,8BAA8B,EAAEC,aAAa,QAAQ,eAAe;;AAE7E;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMU,UAAU,GAAG,MAAOC,IAAI,IAAK;IACjCF,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,MAAM;QAAEK;MAAK,CAAC,GAAG,MAAMV,8BAA8B,CACnDD,IAAI,EACJU,IAAI,CAACE,KAAK,EACVF,IAAI,CAACG,QACP,CAAC;;MAED;MACA,MAAMX,aAAa,CAACS,IAAI,EAAE;QACxBG,WAAW,EAAEJ,IAAI,CAACI;MACpB,CAAC,CAAC;MAEFN,UAAU,CAAC,KAAK,CAAC;MACjB,OAAOG,IAAI;IACb,CAAC,CAAC,OAAON,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAACA,KAAK,CAACW,OAAO,CAAC;MAE5B,IAAIC,kBAAkB;MAEtB,IAAIZ,KAAK,CAACa,IAAI,KAAK,oBAAoB,EAAE;QACvCD,kBAAkB,GAAG,8CAA8C;MACrE,CAAC,MAAM,IAAIZ,KAAK,CAACa,IAAI,KAAK,2BAA2B,EAAE;QACrDD,kBAAkB,GAAG,uBAAuB;MAC9C,CAAC,MAAM,IAAIZ,KAAK,CAACa,IAAI,KAAK,oBAAoB,EAAE;QAC9CD,kBAAkB,GAAG,kBAAkB;MACzC,CAAC,MAAM;QACLA,kBAAkB,GAAG,8CAA8C;MACrE;MAEAX,QAAQ,CAACW,kBAAkB,CAAC;MAC5BT,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLR,IAAI;IACJS,UAAU;IACVJ,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAACH,EAAA,CAlDWD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}